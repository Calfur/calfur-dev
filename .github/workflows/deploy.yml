name: Deploy to Kubernetes (calfur-001)

on:
  push:
    branches:
      - master
  workflow_dispatch:
  repository_dispatch:
    types: [deploy]

env:
  DEPLOY_PATH: /opt/GitHubAction/

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: calfur-001
    concurrency: calfur-001

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Copy Kubernetes manifests to the server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_IP }}
        port: ${{ secrets.SERVER_SSH_PORT }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        fingerprint: ${{ secrets.SERVER_FINGERPRINT }}
        source: "./kubernetes/*"
        target: "${{ env.DEPLOY_PATH }}"

    - name: Apply Kubernetes manifests on the server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        port: ${{ secrets.SERVER_SSH_PORT }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        fingerprint: ${{ secrets.SERVER_FINGERPRINT }}
        script: |
          set -e

          echo "Creating Docker registry secret"
          kubectl create secret docker-registry ghcr-secret \
            --docker-server=ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GH_PAT_PACKAGES_READ }} \
            --docker-email=${{ secrets.EMAIL }} \
            --dry-run=client -o yaml | kubectl apply -f -

          echo "Creating Traefik email secret"
          kubectl create secret generic traefik-acme-email \
            --from-literal=email=${{ secrets.EMAIL }} \
            --dry-run=client -o yaml | kubectl apply -f -
            
          echo "Creating Grafana admin credentials secret"
          kubectl create secret generic grafana-admin-credentials \
            --from-literal=password=${{ secrets.GRAFANA_ADMIN_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -

          echo "Applying Kubernetes manifests"
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/traefik
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/pannenstreifen
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/q-swiper
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/balloon-race
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/killer
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/fondueplausch
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/volleyballnacht
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/star-wars-bild-countdown
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/metrics
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/jetski
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/homepage
          kubectl apply -k ${{ env.DEPLOY_PATH }}/kubernetes/party-battle --prune -l app.kubernetes.io/part-of=party-battle --prune-allowlist=apps/v1/Deployment --prune-allowlist=core/v1/Service --prune-allowlist=traefik.io/v1alpha1/IngressRoute --prune-allowlist=traefik.io/v1alpha1/Middleware

          echo "Cleaning up"
          rm -rf ${{ env.DEPLOY_PATH }}
