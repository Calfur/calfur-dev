name: Deploy to Kubernetes

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Copy Kubernetes manifests to the server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "./kubernetes/*"
        target: "/opt/GitHubAction/"

    - name: Apply Kubernetes manifests on the server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e
          docker-compose -f /opt/GitHubAction/kubernetes/k3s.yml up -d
          echo "Waiting for Kubernetes API server to be ready..."
          while ! docker exec k3s_server kubectl get nodes; do
            sleep 2
          done
          echo "Kubernetes API server is ready."
          docker exec k3s_server kubectl apply -f https://raw.githubusercontent.com/traefik/traefik/v3.0/docs/content/reference/dynamic-configuration/kubernetes-crd-definition-v1.yml
          docker exec k3s_server kubectl apply -f https://raw.githubusercontent.com/traefik/traefik/v3.0/docs/content/reference/dynamic-configuration/kubernetes-crd-rbac.yml
          docker exec k3s_server kubectl apply -f /kubernetes-configs/02-traefik-service.yml
          docker exec k3s_server kubectl apply -f /kubernetes-configs/02-traefik-deployment.yml
          docker exec k3s_server kubectl apply -f /kubernetes-configs/03-pannenstreifen-website-service.yml
          docker exec k3s_server kubectl apply -f /kubernetes-configs/03-pannenstreifen-website-deployment.yml
          docker exec k3s_server kubectl apply -f /kubernetes-configs/04-pannenstreifen-website-ingress.yml
          rm -rf /opt/GitHubAction/
